---
import BaseLayout from '../layouts/BaseLayout.astro';
import Header from '../components/Header.astro';
---

<BaseLayout title="Dashboard">
  <!-- Inclure le Header -->
  <Header />

  <!-- Section principale du Dashboard -->
  <section class="pt-64 pb-20 bg-gray-900 text-white px-4 md:px-8">
    <div class="container mx-auto max-w-5xl">
      <h2 class="text-4xl font-bold mb-8 text-center">Bienvenue sur votre Dashboard</h2>
      <p class="text-lg font-light mb-6 text-center">
        Ici, vous pouvez consulter vos projets, vos factures et suivre l'évolution de vos commandes.
      </p>

      <!-- Formulaire d'ajout de projet -->
      <div class="mt-12 bg-gray-800 rounded-lg shadow-lg p-6">
        <h3 class="text-2xl font-semibold mb-4">Ajouter un projet</h3>
        <form action="/projects" method="POST" id="projectForm" class="space-y-4">
          <div>
            <label for="name" class="block text-sm font-medium text-gray-300">Nom du projet</label>
            <input type="text" id="name" name="name" class="mt-1 block w-full bg-gray-700 text-white border border-gray-600 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500" required />
          </div>
          <div>
            <label for="status" class="block text-sm font-medium text-gray-300">Statut</label>
            <input type="text" id="status" name="status" class="mt-1 block w-full bg-gray-700 text-white border border-gray-600 rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-500" required />
          </div>
          <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition duration-300 w-full">Ajouter le projet</button>
        </form>
      </div>

      <!-- Section pour afficher les projets existants -->
      <div class="mt-12 bg-gray-800 rounded-lg shadow-lg p-6">
        <h3 class="text-2xl font-semibold mb-4">Vos Projets</h3>
        <table class="min-w-full table-auto">
          <thead class="bg-gray-700">
            <tr>
              <th class="px-4 py-2">ID Projet</th>
              <th class="px-4 py-2">Nom</th>
              <th class="px-4 py-2">Statut</th>
              <th class="px-4 py-2">Date de création</th>
              <th class="px-4 py-2">Actions</th>
            </tr>
          </thead>
          <tbody class="bg-gray-600" id="projectTable">
            <!-- Projets ajoutés dynamiquement -->
          </tbody>
        </table>
      </div>
    </div>
  </section>

  <!-- Scripts pour gérer les projets -->
  <script>
    interface Projet {
      id: number;
      name: string;
      status: string;
      created_at: string;
    }

    // Fonction pour ajouter un projet à la liste dans le tableau
    function ajouterProjetALaListe(projet: Projet) {
      const tbody = document.getElementById('projectTable') as HTMLTableSectionElement | null;

      if (tbody) {  // Vérifier que tbody n'est pas null
        const tr = document.createElement('tr');

        tr.innerHTML = `
          <td class="border px-4 py-2">${projet.id}</td>
          <td class="border px-4 py-2">${projet.name}</td>
          <td class="border px-4 py-2">${projet.status}</td>
          <td class="border px-4 py-2">${new Date(projet.created_at).toLocaleDateString()}</td>
          <td class="border px-4 py-2">
            <button class="text-yellow-500 hover:underline" onclick="modifierProjet(${projet.id})">Modifier</button>
            <button class="text-red-500 hover:underline ml-4" onclick="supprimerProjet(${projet.id})">Supprimer</button>
          </td>
        `;

        tbody.appendChild(tr);
      }
    }

    // Charger les projets existants lors du chargement de la page
    document.addEventListener('DOMContentLoaded', async () => {
      try {
        const response = await fetch('/projects', {
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('token')}` // Inclure le token JWT si nécessaire
          }
        });

        if (!response.ok) {
          alert('Erreur lors de la récupération des projets');
          return;
        }

        const projets: Projet[] = await response.json();
        projets.forEach(projet => ajouterProjetALaListe(projet));
      } catch (error) {
        console.error('Erreur:', error);
        alert('Une erreur est survenue');
      }
    });

    // Formulaire d'ajout de projet
    const projectForm = document.getElementById('projectForm') as HTMLFormElement | null;

    if (projectForm) {
      projectForm.addEventListener('submit', async (event) => {
        event.preventDefault();

        const formData = new FormData(projectForm);
        const data = Object.fromEntries(formData);

        try {
          const response = await fetch('/projects', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
              'Authorization': `Bearer ${localStorage.getItem('token')}` // Inclure le token JWT si nécessaire
            },
            body: JSON.stringify(data)
          });

          if (!response.ok) {
            alert('Erreur lors de l\'ajout du projet');
            return;
          }

          const result: Projet = await response.json();

          // Mettre à jour la liste des projets avec le nouveau projet ajouté
          ajouterProjetALaListe(result);
          projectForm.reset(); // Resetter le formulaire après ajout
        } catch (error) {
          console.error('Erreur:', error);
          alert('Une erreur est survenue');
        }
      });
    }

    // Fonction pour supprimer un projet
    async function supprimerProjet(id: number) {
      try {
        const response = await fetch(`/projects/${id}`, {
          method: 'DELETE',
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('token')}`
          }
        });

        if (response.ok) {
          // Supprimer le projet de la liste
          const row = document.querySelector(`tr[data-id="${id}"]`);
          if (row) row.remove();
        } else {
          alert('Erreur lors de la suppression du projet');
        }
      } catch (error) {
        console.error('Erreur:', error);
        alert('Une erreur est survenue');
      }
    }

    // Fonction pour modifier un projet (à implémenter plus tard)
    function modifierProjet(id: number) {
      alert('Fonction de modification à implémenter');
    }
  </script>
</BaseLayout>
